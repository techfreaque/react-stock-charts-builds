{"version":3,"file":"PointAndFigureSeries.js","names":["PointAndFigureSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","columns","getColumns","clip","getAxisCanvas","stroke","fill","strokeWidth","className","map","col","idx","offset","boxes","box","i","direction","up","open","columnWidth","close","down","boxHeight","Component","propTypes","PropTypes","string","number","isRequired","object","bool","defaultProps","lineWidth","forEach","offsetX","offsetY","fillStyle","strokeStyle","beginPath","moveTo","lineTo","x","y","rx","ry","ellipse","Math","PI","width","length","anyBox","j","isNotDefined","isDefined","abs","filter","d","xOffset"],"sources":["../../../src/lib/series/PointAndFigureSeries.js"],"sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport { getAxisCanvas } from \"../GenericComponent\";\r\n\r\nimport { isDefined, isNotDefined } from \"../utils\";\r\n\r\nclass PointAndFigureSeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\r\n\r\n\t\tdrawOnCanvas(ctx, this.props, columns);\r\n\t}\r\n\trender() {\r\n\t\tconst { clip } = this.props;\r\n\r\n\t\treturn <GenericChartComponent\r\n\t\t\tclip={clip}\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\tdrawOn={[\"pan\"]}\r\n\t\t/>;\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\r\n\t\tconst { stroke, fill, strokeWidth, className } = this.props;\r\n\r\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\r\n\r\n\t\treturn (\r\n\t\t\t<g className={className}>\r\n\t\t\t\t{columns.map((col, idx) => (\r\n\t\t\t\t\t<g key={idx} className={col.className} transform={`translate(${ col.offset[0] }, ${ col.offset[1] })`}>\r\n\t\t\t\t\t\t{col.boxes.map((box, i) => {\r\n\t\t\t\t\t\t\tif (col.direction > 0) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<g key={`${ idx }-${ i }`}>\r\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fillRule={fill.up}\r\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.open} x2={box.columnWidth} y2={box.close} />\r\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fillRule={fill.up}\r\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.close} x2={box.columnWidth} y2={box.open} />\r\n\t\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<ellipse key={`${ idx }-${ i }`}\r\n\t\t\t\t\t\t\t\t\tclassName=\"down\" strokeWidth={strokeWidth} stroke={stroke.down} fillRule={fill.down}\r\n\t\t\t\t\t\t\t\t\tcx={box.columnWidth / 2} cy={(box.open + box.close) / 2}\r\n\t\t\t\t\t\t\t\t\trx={box.columnWidth / 2} ry={box.boxHeight / 2} />\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</g>\r\n\t\t\t\t))}\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nPointAndFigureSeries.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tstrokeWidth: PropTypes.number.isRequired,\r\n\tstroke: PropTypes.object.isRequired,\r\n\tfill: PropTypes.object.isRequired,\r\n\tclip: PropTypes.bool.isRequired,\r\n};\r\n\r\nPointAndFigureSeries.defaultProps = {\r\n\tclassName: \"react-stockcharts-point-and-figure\",\r\n\tstrokeWidth: 1,\r\n\tstroke: {\r\n\t\tup: \"#6BA583\",\r\n\t\tdown: \"#FF0000\"\r\n\t},\r\n\tfill: {\r\n\t\tup: \"none\",\r\n\t\tdown: \"none\"\r\n\t},\r\n\tclip: true,\r\n};\r\n\r\nfunction drawOnCanvas(ctx, props, columns) {\r\n\tconst { stroke, fill, strokeWidth } = props;\r\n\r\n\tctx.lineWidth = strokeWidth;\r\n\r\n\tcolumns.forEach(col => {\r\n\t\tconst [offsetX, offsetY] = col.offset;\r\n\t\tcol.boxes.forEach(box => {\r\n\t\t\tif (col.direction > 0) {\r\n\t\t\t\tctx.fillStyle = fill.up;\r\n\t\t\t\tctx.strokeStyle = stroke.up;\r\n\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.open);\r\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\r\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.close);\r\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\r\n\r\n\t\t\t\tctx.stroke();\r\n\t\t\t} else {\r\n\t\t\t\tctx.fillStyle = fill.down;\r\n\t\t\t\tctx.strokeStyle = stroke.down;\r\n\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\tconst [x, y] = [offsetX + box.columnWidth / 2, offsetY + box.open + box.boxHeight / 2];\r\n\t\t\t\tconst [rx, ry] = [box.columnWidth / 2, box.boxHeight / 2];\r\n\r\n\t\t\t\tctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tctx.stroke();\r\n}\r\n\r\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\r\n\r\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\r\n\t\t- xScale(xAccessor(plotData[0]));\r\n\r\n\tconst columnWidth = (width / (plotData.length - 1));\r\n\r\n\tlet anyBox, j = 0;\r\n\twhile (isNotDefined(anyBox)) {\r\n\t\tif (isDefined(plotData[j].close)) {\r\n\t\t\tanyBox = plotData[j].boxes[0];\r\n\t\t} else {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tj++;\r\n\t}\r\n\r\n\tconst boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\r\n\r\n\tconst columns = plotData\r\n\t\t.filter(d => isDefined(d.close))\r\n\t\t.map(d => {\r\n\t\t\tconst boxes = d.boxes.map((box) => ({\r\n\t\t\t\tcolumnWidth: columnWidth,\r\n\t\t\t\tboxHeight: boxHeight,\r\n\t\t\t\topen: yScale(box.open),\r\n\t\t\t\tclose: yScale(box.close),\r\n\t\t\t}));\r\n\r\n\t\t\tconst xOffset = (xScale(xAccessor(d)) - (columnWidth / 2));\r\n\t\t\treturn {\r\n\t\t\t\tboxes: boxes,\r\n\t\t\t\tdirection: d.direction,\r\n\t\t\t\toffset: [xOffset, 0],\r\n\t\t\t};\r\n\t\t});\r\n\treturn columns;\r\n}\r\n\r\nexport default PointAndFigureSeries;\r\n"],"mappings":"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"}